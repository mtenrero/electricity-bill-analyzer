{"version":3,"sources":["layout/Header.js","layout/Footer.js","content/info/Info.js","content/steps/Uploader.js","content/report/WeekDaysReport.js","content/report/HourlyReport.js","content/report/WeekHourlyReport.js","content/report/Report.js","content/steps/Stepper.js","layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","HeaderLayout","props","className","Footer","Foot","style","textAlign","Info","message","description","type","showIcon","Dragger","Upload","Uploader","handleUploadDone","info","setState","uploaded","state","draggerProps","name","accept","multiple","e","console","log","Array","isArray","this","fileUpload","file","fileList","length","shift","onSuccess","match","success","error","event","preventDefault","next","formData","FormData","append","axios","post","then","res","saveReport","data","catch","servererror","getFieldDecorator","form","spinning","step","onSubmit","handleSubmit","bind","Item","initialValie","dataset","filename","valuePropName","getValueFromEvent","normFile","onChange","customRequest","dummyRequest","shape","icon","size","htmlType","disabled","React","Component","Form","create","WeekDaysReport","report","weekDaysReport","analysis","width","height","dataKey","fill","HourlyReport","hourlyReport","WeekHourlyReport","weekdayHoursReport","map","value","index","color","WeekString","Report","title","Step","Steps","Stepper","current","status","moveStep","handleError","handleReportCallback","onClick","handleRestart","Content","LayoutElec","padding","background","minHeight","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.280de773.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Layout } from 'antd';\r\nimport './header.css';\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\nfunction HeaderLayout(props) {\r\n    return(\r\n        <Header>\r\n            <div className=\"logo\">electricity bill analyzer</div>\r\n            <div className=\"logo_extra\">by mtenrero.com</div>\r\n    \r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default HeaderLayout;","import React from 'react';\r\n\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\n\r\nfunction Foot()  {\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>Electricity-Bill-Analyzer ©2019 Created by Marcos Tenrero</Footer>\r\n    )\r\n}\r\n\r\nexport default Foot;","import React from 'react';\r\nimport { Alert } from 'antd';\r\n\r\nfunction Info() {\r\n    return(\r\n        <div>\r\n            <Alert\r\n                message=\"¿Cómo funciona el analizador?\"\r\n                description=\"Necesitas disponer del fichero CSV que te proporciona tu compañía eléctrica, \r\n                después, debes subirlo desde el formulario que aparece en la sección inferior y pulsar enviar.  \r\n                El programa emitirá el informe de gasto que has realizado\"\r\n                type=\"info\"\r\n                showIcon\r\n            />\r\n            <br></br>\r\n            <Alert message=\"Los datos se envían a nuestros servidores, pero son desechados tras su análisis. Cumplimos la RGPD / LOPD\" type=\"warning\" showIcon />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nimport './steps.css'\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Upload, Icon, Button, message, Form, Spin } from 'antd';\r\nconst { Dragger } = Upload;\r\n\r\nclass Uploader extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploaded: false,\r\n        }\r\n        this.draggerProps = {\r\n            name: 'file',\r\n            accept: \".csv\",\r\n            multiple: false,\r\n        };\r\n    };\r\n\r\n    handleUploadDone = (info) => this.setState({uploaded: true});\r\n\r\n    normFile(e) {\r\n        console.log('Upload event', e);\r\n        if (Array.isArray(e)) {\r\n            this.setState({fileUpload: e.file})\r\n            return e;\r\n        }\r\n        if (e.fileList.length > 1) {\r\n            this.setState({fileUpload: e.file})\r\n            e.fileList.shift();\r\n        }\r\n        return e && e.fileList;\r\n    }\r\n\r\n    dummyRequest({ file, onSuccess }) {\r\n        this.state.file = file\r\n        const isCSV = file.name.match(/\\.*.csv/i);\r\n        if (!isCSV) {\r\n            message.error('Debe ser un fichero con formato CSV');\r\n        } else {\r\n            message.success('Fichero preparado')\r\n            onSuccess('ok');\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.next();\r\n\r\n        const formData = new FormData()\r\n        formData.append('file', this.state.file)\r\n\r\n        axios.post(\"https://europe-west1-light-bill-hourly-usage.cloudfunctions.net/FullMeanAnalysis-1\", formData, {\r\n        }).then( res => {\r\n            this.props.saveReport(res.data);\r\n            this.props.next();\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.props.servererror();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { form: { getFieldDecorator }} = this.props;\r\n        return(\r\n            <div className=\"fileDragger\">\r\n                <Spin spinning={this.props.step === 1}>\r\n                    <Form onSubmit={this.handleSubmit.bind(this)}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('file', {\r\n                                initialValie: this.props.dataset && this.props.dataset.filename ? this.props.dataset.filename : [],\r\n                                valuePropName: 'fileList',\r\n                                getValueFromEvent: this.normFile\r\n                            })(\r\n                                <Dragger {...this.draggerProps}\r\n                                onChange={this.handleUploadDone}\r\n                                customRequest={this.dummyRequest.bind(this)}>\r\n                                    <p className=\"ant-upload-drag-icon\">\r\n                                        <Icon type=\"inbox\" />\r\n                                    </p>\r\n                                    <p className=\"ant-upload-text\">Selecciona o arrastra un fichero al área delimitada</p>\r\n                                    <p className=\"ant-upload-hint\">\r\n                                        Sólo se admiten ficheros CSV\r\n                                    </p>\r\n                                </Dragger>\r\n                            )}\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item className=\"uploadConsumption\">\r\n                            <Button \r\n                                type=\"primary\" \r\n                                shape=\"round\" \r\n                                icon=\"cloud-upload\" \r\n                                size=\"large\"\r\n                                htmlType=\"submit\" \r\n                                disabled={!this.state.uploaded}\r\n                            >\r\n                                Analizar consumo\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Spin>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create() (Uploader);","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, Tooltip } from 'recharts';\r\n\r\nimport './report.css';\r\n\r\nclass WeekDaysReport extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            report: props.report,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"weekDaysReport\">\r\n                <BarChart data={this.state.report.weekDaysReport.analysis}  width={500} height={300}>\r\n                    <XAxis dataKey=\"weekString\"></XAxis>\r\n                    <YAxis />\r\n                    <Legend />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"mean\" fill=\"#1890ff\"></Bar>\r\n                </BarChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekDaysReport;","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, Tooltip } from 'recharts';\r\n\r\nimport './report.css';\r\n\r\nclass HourlyReport extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            report: props.report,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"weekDaysReport\">\r\n                <BarChart data={this.state.report.hourlyReport.analysis}  width={500} height={300}>\r\n                    <XAxis dataKey=\"hour\"></XAxis>\r\n                    <YAxis />\r\n                    <Legend />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"mean\" fill=\"#1890ff\"></Bar>\r\n                </BarChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HourlyReport;","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, Tooltip } from 'recharts';\r\n\r\nimport { Tag } from 'antd';\r\n\r\nimport './report.css';\r\n\r\nclass WeekHourlyReport extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            report: props.report,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"weekDaysReport\">\r\n\r\n                {this.state.report.weekdayHoursReport.map((value, index) => {\r\n                    return (\r\n                        <div>\r\n                            <Tag color=\"#87d068\">{value.WeekString}</Tag>\r\n                            <BarChart data={value.report.analysis}  width={500} height={300}>\r\n                                <XAxis dataKey=\"weekString\"></XAxis>\r\n                                <YAxis />\r\n                                <Legend />\r\n                                <Tooltip />\r\n                                <Bar dataKey=\"mean\" fill=\"#1890ff\"></Bar>\r\n                            </BarChart>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekHourlyReport;","import React from 'react';\r\nimport WeekDaysReport from './WeekDaysReport';\r\nimport { Card } from 'antd';\r\nimport HourlyReport from './HourlyReport';\r\nimport WeekHourlyReport from './WeekHourlyReport';\r\n\r\nclass Report extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            report: props.report,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"report\">\r\n                <Card title=\"Media de consumo por días de la semana\" className=\"cardReport\">\r\n                    <WeekDaysReport {...this.props}></WeekDaysReport> \r\n                </Card>\r\n                <Card title=\"Media de consumo horario\" className=\"cardReport\">\r\n                    <HourlyReport {...this.props}></HourlyReport>\r\n                </Card>\r\n                <Card title=\"Media de consumo horario fraccionado por días de la semana\" className=\"cardReport\">\r\n                    <WeekHourlyReport {...this.props}></WeekHourlyReport>\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Report;","import React from 'react';\r\n\r\nimport { Steps, message, Button } from 'antd';\r\n\r\nimport './steps.css'\r\nimport Uploader from './Uploader';\r\n\r\nimport Report from '../report/Report';\r\n\r\nconst { Step } = Steps;\r\n\r\nclass Stepper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            step: props.step,\r\n            servererror: \"process\",\r\n            report: null,\r\n        }\r\n    }\r\n\r\n    moveStep() {\r\n        this.setState({step: this.state.step + 1});\r\n    }\r\n\r\n    handleError() {\r\n        message.error(\"Error procesando el fichero, posiblemente no tenga un contenido válido\");\r\n        this.setState({servererror: \"error\"});\r\n    }\r\n\r\n    handleRestart() {\r\n        this.setState({step: 0});\r\n        this.setState({servererror: \"process\"});\r\n    }\r\n\r\n    handleReportCallback(data) {\r\n        this.setState({report: data})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Stepper\">\r\n                <Steps current={this.state.step} status={this.state.servererror}>\r\n                    <Step title=\"Selecciona tu consumo\" description=\"Localiza tu fichero de consumo\" />\r\n                    <Step title=\"Análisis\" description=\"Espera mientras analizamos tus patrones de gasto energético\" />\r\n                    <Step title=\"Informe\" description=\"Examina tus patrones de gasto energético\" />\r\n                </Steps>\r\n\r\n                { this.state.step < 2 ? <Uploader next={this.moveStep.bind(this)} servererror={this.handleError.bind(this)} step={this.state.step} saveReport={this.handleReportCallback.bind(this)}></Uploader>: null}\r\n                \r\n                { this.state.step >= 2 ? <Report report={this.state.report}></Report> : null }\r\n\r\n                <div className=\"rollbackSteps\">\r\n                    <Button type=\"danger\" icon=\"redo\" onClick={this.handleRestart.bind(this)}>\r\n                        Empezar de nuevo\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Stepper;","import React from 'react';\r\n\r\nimport { Layout } from 'antd';\r\n\r\nimport HeaderLayout from './Header'\r\nimport Foot from './Footer'\r\nimport Info from '../content/info/Info'\r\nimport Stepper from '../content/steps/Stepper';\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction LayoutElec(props) {\r\n    return(\r\n        <div className=\"App\">\r\n            <Layout className=\"layout\">\r\n                <HeaderLayout></HeaderLayout>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\r\n                        <Info></Info>\r\n                        <br></br>\r\n                        <Stepper step={0}></Stepper>\r\n                    </div>\r\n                </Content>\r\n                <Foot></Foot>\r\n            </Layout>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LayoutElec;","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport LayoutElec from './layout/Layout'\r\n\r\nfunction App() {\r\n  return (\r\n    <LayoutElec></LayoutElec>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}